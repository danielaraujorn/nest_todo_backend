# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type AuthStatusDto {
  success: Boolean!
  message: String
  token: TokenDto
}

input CreateListInput {
  text: String!
}

input CreateTodoInput {
  text: String
  listId: ID
  completed: Boolean
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type List {
  id: ID!
  text: String!
  createdAt: DateTime!
  updatedAt: DateTime!
  active: Boolean!
  todos: [Todo!]!
  user: User!
}

type ListLists {
  items: [List!]!
  total: Int!
}

type ListTodos {
  items: [Todo!]!
  total: Int!
}

type Mutation {
  upsertList(id: ID, listInput: CreateListInput!): List!
  deactivateList(id: ID!): Boolean!
  saveTodo(id: ID, todoInput: CreateTodoInput!): Todo!
  register(firstName: String!, lastName: String, email: String!, password: String!): AuthStatusDto!
  login(email: String!, password: String!): AuthStatusDto!
}

type Query {
  list(id: String!): List!
  lists(skip: Int = 0, take: Int = 50, ids: [ID!], order: String = "DESC", fieldSort: String = "updatedAt"): ListLists!
  todo(id: String!): Todo!
  todos(skip: Int = 0, take: Int = 50, ids: [ID!], listId: ID, order: String = "DESC", fieldSort: String = "updatedAt"): ListTodos!
  ownUser: User!
}

type Todo {
  id: ID!
  text: String!
  createdAt: DateTime!
  updatedAt: DateTime!
  completed: Boolean!
  list: List!
}

type TokenDto {
  expiresIn: Float!
  accessToken: String!
}

type User {
  id: ID!
  email: String!
  firstName: String!
  lastName: String!
  createdAt: DateTime!
  updatedAt: DateTime!
  lists: [List!]!
}
